<?php

/**
 * Implements hook_menu().
 */
function fullcalendar_colors_menu() {
  $items = array();

  $base = array(
    'file' => 'fullcalendar_colors.admin.inc',
    'file path' => drupal_get_path('module', 'fullcalendar_colors') . '/includes',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
  );

  $items['admin/config/calendar/fullcalendar/colors'] = array(
    'title' => 'Colors',
    'description' => 'Adjust FullCalendar color settings for entities.',
    'page arguments' => array('fullcalendar_colors_admin_node_type_settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  ) + $base;

  $items['admin/config/calendar/fullcalendar/colors/node'] = array(
    'title' => 'Node Type',
    'page arguments' => array('fullcalendar_colors_admin_node_type_settings'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  ) + $base;

  if (module_exists('taxonomy')) {
    $items['admin/config/calendar/fullcalendar/colors/taxonomy'] = array(
      'title' => 'Taxonomy',
      'page arguments' => array('fullcalendar_colors_admin_taxonomy_settings'),
      'type' => MENU_LOCAL_TASK,
      'weight' => -8,
    ) + $base;
  }

  $items['admin/config/calendar/fullcalendar/colors/user'] = array(
    'title' => 'User Role',
    'page arguments' => array('fullcalendar_colors_admin_user_role_settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => -6,
  ) + $base;

  if (module_exists('og')) {
    $items['admin/config/calendar/fullcalendar/colors/og'] = array(
      'title' => 'Organic Groups',
      'page arguments' => array('fullcalendar_colors_admin_og_settings'),
      'type' => MENU_LOCAL_TASK,
      'weight' => -2,
    ) + $base;
  }

  return $items;
}

/**
 * Implements hook_help().
 */
function fullcalendar_colors_help($path, $arg) {
  switch ($path) {
    case 'admin/help#fullcalendar_colors':
      return '<p>' . t('You can configure colors for your fullcalendar events based on taxonomy terms, node types, etc. on the <a href="@link">FullCalendar Colors administration page</a>.', array('@link' => '/admin/config/calendar/fullcalendar/colors')) . '</p>';
      break;
  }
}

/**
 * Implements hook_fullcalendar_classes().
 */
function fullcalendar_colors_fullcalendar_classes($entity) {
  require_once './' . drupal_get_path('module', 'fullcalendar_colors') . '/includes/fullcalendar_colors.inc';
  $classes = array();

  $hook = 'fullcalendar_colors_class_names';
  $selectors = array();
  foreach (module_implements($hook) as $module) {
    // Initialize selector array.
    $hook_selectors = array();

    // Fetch all the class names.
    $function = $module . '_' . $hook;
    $class_names = $function($entity);
    foreach ($class_names as $class_name) {
      // Build the classes array.
      $classes[] = $class_name;
      // Create a valid FullCalendar selector based on the classname.
      $hook_selectors[$class_name] =  $class_name;
    }
    $selectors[$module] = $hook_selectors;
  }

  fullcalendar_colors_process_selectors($selectors);

  return $classes;
}

/**
 * Implements hook_colors_build_selector().
 */
function fullcalendar_colors_colors_build_selector($class) {
  $selector = ' .' . $class . ',';
  $selector .= ' .' . $class . ' .fc-event-skin,';
  $selector .= ' .' . $class . ' .fc-event-time,';
  $selector .= ' .' . $class . ' a';
  return $selector;
}

/**
 * Processes selectors.
 *
 * @param $selector
 *   Selector that is being processed.
 * @param $reset
 *   Boolean to print the CSS and reset the array.
 */
function fullcalendar_colors_process_selectors($selectors = array(), $reset = FALSE) {
  $fullcalendar_selectors = &drupal_static(__FUNCTION__, array());
  if ($reset) {
    $unique_selectors = array();
    foreach ($fullcalendar_selectors as $class) {
      foreach ($class as $class_name => $selector) {
        if (is_array($selector)) {
          $selector = array_unique($selector);
          $selector = reset($selector);
        }
        $unique_selectors[] = $selector;
      }
    }
    // Tell the colors module which selectors to color.
    colors_insert_css_from_selectors($unique_selectors, 'fullcalendar_colors');
    drupal_static_reset(__FUNCTION__);
  }
  else {
    $fullcalendar_selectors = array_merge_recursive($selectors, $fullcalendar_selectors);
  }
}

/**
 * Inserts or updates a FullCalendar color configuration.
 *
 * @TODO Implement a border-color setting UI, deprecate this function.
 *
 * @param $classes
 *   CSS class you would like to insert or update.
 * @param $background
 *   Background color used for the color configuration.
 * @param $text
 *   Text color used for the color configuration.
 */
function fullcalendar_colors_set_color($classes, $background = '#000000', $text = '#ffffff') {
  $colors = array(
    'background' => $background,
    'border' => $background,
    'text' => $text,
  );
  colors_set_colors($classes, $colors, 'fullcalendar_colors');
}
